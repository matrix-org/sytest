# GitHub actions workflow which builds and publishes the docker images.

name: Build and deploy docker images

on:
  push:
    branches: [ develop, dmr/publish-docker-images ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-sytest-images:
    name: "Build sytest:${{ matrix.tag }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - base_image: ubuntu:bionic
            tag: bionic
          - base_image: debian:buster
            tag: buster
          - base_image: debian:testing
            tag: testing
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        run: docker buildx inspect

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # From https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching#the-cache-dance-off
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          labels: "gitsha1=${{ github.sha }}"
          file: docker/base.Dockerfile
          build-args: "BASE_IMAGE=${{ matrix.base_image }}"
          tags: dmrobertsonelement/sytest:${{ matrix.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Workaround to stop caches growing forever. See
      # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#local-cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-dependent-images:
    needs: build-sytest-images
    name: "Build sytest-${{ matrix.dockerfile }}:${{ matrix.sytest_image_tag }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - sytest_image_tag: bionic
            dockerfile: synapse
            tags: "dmrobertsonelement/sytest-synapse:bionic"
          - sytest_image_tag: buster
            dockerfile: synapse
            tags: "dmrobertsonelement/sytest-synapse:buster"
          - sytest_image_tag: testing
            dockerfile: synapse
            tags: "dmrobertsonelement/sytest-synapse:testing"
          - sytest_image_tag: buster
            dockerfile: dendrite
            tags: "dmrobertsonelement/sytest-dendrite:go113,dmrobertsonelement/sytest-dendrite:latest"

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        run: docker buildx inspect

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # From https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching#the-cache-dance-off
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          labels: "gitsha1=${{ github.sha }}"
          file: docker/base.Dockerfile
          build-args: "SYTEST_IMAGE_TAG=${{ matrix.base_image }}"
          tags: ${{ matrix.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Workaround to stop caches growing forever. See
      # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#local-cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
